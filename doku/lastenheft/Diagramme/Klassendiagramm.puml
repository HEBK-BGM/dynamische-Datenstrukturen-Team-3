@startuml
'https://plantuml.com/class-diagram
/'
abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList

class ArrayList {
Object[] elementData
size()
}

enum TimeUnit {
DAYS
HOURS
MINUTES
}
'/

class de.hebk.model.list.List {
- Node<T> first
- Node<T> aktuelleNode
+ boolean isEmpty()
+ boolean hasAccess()
+ void next()
+ void toFirst()
+ void toLast()
+ T getObject()
+ void setObject()
+ void append(T)
+ void insert(T)
+ void concat(List<T>)
+ void remove()
}

class de.hebk.model.node.Node {
- T context
- Node<T> next
+ T getContext()
+ void setContext(T)
+ Node<T> getNext()
+ void setNext(Node<T>)
}

class de.hebk.model.queue.Queue {
- Node<T> first
+ boolean isEmpty()
+ void enqueue(T)
+ void dequeue()
+ T front()
}
class de.hebk.model.stack.Stack {
- Node<T> first
+ boolean isEmpty()
+ void push(T)
+ void pop()
+ T top()
}
class de.hebk.Main {
+ {static} void main(String[])
}

class de.hebk.menue.GUI {

}

class de.hebk.menue.Menue {

}

class de.hebk.game.Joker{

}

class de.hebk.menue.User{

}
'speichern von bestenliste

class de.hebk.menu.Questions{

}

class de.hebk.CSVreader{

}

@enduml